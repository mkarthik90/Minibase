Script started on Sat 20 Feb 2016 09:36:26 PM MST
]0;karthikeyan@karthikeyan-Inspiron-5537: ~/workspace/MiniBase/srckarthikeyan@karthikeyan-Inspiron-5537:~/workspace/MiniBase/src$ make test
cd tests; make bmtest dbtest; whoami; make hftest bttest indextest
make[1]: Entering directory `/home/karthikeyan/workspace/MiniBase/src/tests'
/usr/lib/jvm/java-7-openjdk-amd64/bin/javac -classpath .:.. TestDriver.java BMTest.java
/usr/lib/jvm/java-7-openjdk-amd64/bin/java  -classpath .:.. tests.BMTest

Running Buffer Management tests....

  Test 1 does simple test on buffer using theFIFOalgorithmmanager operations:
  - Allocate a bunch of new pages
  - Write something on each one
  - Read that something back from each one
   (because we're buffering, this is where most of the writes happen)
  - Free the pages again
  Test 1 completed successfully.

  Test 1 does simple test on buffer using theLIFOalgorithmmanager operations:
  - Allocate a bunch of new pages
  - Write something on each one
  - Read that something back from each one
   (because we're buffering, this is where most of the writes happen)
  - Free the pages again
  Test 1 completed successfully.

  Test 1 does simple test on buffer using theLRUKalgorithmmanager operations:
  - Allocate a bunch of new pages
  - Write something on each one
  - Read that something back from each one
   (because we're buffering, this is where most of the writes happen)
  - Free the pages again
  Test 1 completed successfully.

  Test 2 exercises some illegal buffer manager operations:FIFO
  - Try to pin more pages than there are frames
*** Pinning too many pages
  --> Failed as expected 

  - Try to free a doubly-pinned page
*** Freeing a pinned page
  --> Failed as expected 

  - Try to unpin a page not in the buffer pool
*** Unpinning a page not in the buffer pool
  --> Failed as expected 

  Test 2 completed successfully.

  Test 2 exercises some illegal buffer manager operations:LIFO
  - Try to pin more pages than there are frames
*** Pinning too many pages
  --> Failed as expected 

  - Try to free a doubly-pinned page
*** Freeing a pinned page
  --> Failed as expected 

  - Try to unpin a page not in the buffer pool
*** Unpinning a page not in the buffer pool
  --> Failed as expected 

  Test 2 completed successfully.

  Test 2 exercises some illegal buffer manager operations:LRUK
  - Try to pin more pages than there are frames
*** Pinning too many pages
  --> Failed as expected 

  - Try to free a doubly-pinned page
*** Freeing a pinned page
  --> Failed as expected 

  - Try to unpin a page not in the buffer pool
*** Unpinning a page not in the buffer pool
  --> Failed as expected 

  Test 2 completed successfully.

  Test 3 exercises some of the internals of the buffer managerFIFO
  - Allocate and dirty some new pages, one at a time, and leave some pinned
  - Read the pages
  Test 3 completed successfully.

  Test 3 exercises some of the internals of the buffer managerLIFO
  - Allocate and dirty some new pages, one at a time, and leave some pinned
  - Read the pages
  Test 3 completed successfully.

  Test 3 exercises some of the internals of the buffer managerLRUK
  - Allocate and dirty some new pages, one at a time, and leave some pinned
  - Read the pages
  Test 3 completed successfully.

...Buffer Management tests completely successfully.

/usr/lib/jvm/java-7-openjdk-amd64/bin/javac -classpath .:.. TestDriver.java DBTest.java
/usr/lib/jvm/java-7-openjdk-amd64/bin/java  -classpath .:.. tests.DBTest

Running Disk Space Management tests....

Replacer: Clock


  Test 1 creates a new database and does some tests of normal operations:
  - Add some file entries
  - Allocate a run of pages
  - Write something on some of them
  - Deallocate the rest of them
  Test 1 completed successfully.

  Test 2 opens the database created in test 1 and does some further tests:
  - Delete some of the file entries
  - Look up file entries that should still be there
  - Read stuff back from pages we wrote in test 1
  Test 2 completed successfully.

  Test 3 tests for some error conditions:
  - Look up a deleted file entry
**** Looking up a deleted file entry
  --> Failed as expected 

  - Try to delete a deleted entry again
**** Delete a deleted file entry again
  --> Failed as expected 

  - Try to delete a nonexistent file entry
**** Deleting a nonexistent file entry
  --> Failed as expected 

  - Look up a nonexistent file entry
**** Looking up a nonexistent file entry
  --> Failed as expected 

  - Try to add a file entry that's already there
**** Adding a duplicate file entry
  --> Failed as expected 

  - Try to add a file entry whose name is too long
**** Adding a file entry with too long a name
  --> Failed as expected 

  - Try to allocate a run of pages that's too long 
**** Allocating a run that's too long
  --> Failed as expected 

  - Try to allocate a negative run of pages 
**** Allocating a negative run
  --> Failed as expected 

  - Try to deallocate a negative run of pages 
**** Deallocating a negative run
  --> Failed as expected 

  Test 3 completed successfully.

  Test 4 tests some boundary conditions.
    (These tests are very implementation-specific.)
  - Make sure no pages are pinned
  - Allocate all pages remaining after DB overhead is accounted for
  - Attempt to allocate one more page
**** Allocating one additional page
  --> Failed as expected 

  - Free some of the allocated pages
  - Allocate some of the just-freed pages
  - Free two continued run of the allocated pages
  - Allocate back number of pages equal to the just freed pages

  - Add enough file entries that the directory must surpass a page
  - Make sure that the directory has taken up an extra page: try to
    allocate more pages than should be available
**** Allocating more pages than are now available
   --> Failed as expected 

  - At this point, all pages should be claimed.  Try to allocateone more.
**** Allocating one more page than there is
   --> Failed as expected 

  - Free the last two pages: this tests a boundary condition in the space map.
  Test 4 completed successfully.

...Disk Space Management tests completely successfully.

make[1]: Leaving directory `/home/karthikeyan/workspace/MiniBase/src/tests'
karthikeyan
make[1]: Entering directory `/home/karthikeyan/workspace/MiniBase/src/tests'
/usr/lib/jvm/java-7-openjdk-amd64/bin/javac -classpath .:.. TestDriver.java HFTest.java
/usr/lib/jvm/java-7-openjdk-amd64/bin/java  -classpath .:.. tests.HFTest

Running Heap File tests....

Replacer: Clock


  Test 1: Insert and scan fixed-size records

  - Create a heap file

  - Add 100 records to the file

  - Scan the records just inserted

  Test 1 completed successfully.


  Test 2: Delete fixed-size records

  - Open the same heap file as test 1

  - Delete half the records

  - Scan the remaining records

  Test 2 completed successfully.


  Test 3: Update fixed-size records

  - Open the same heap file as tests 1 and 2

  - Change the records

  - Check that the updates are really there

  Test 3 completed successfully.


  Test 4: Test some error conditions

  - Try to change the size of a record

**** Shortening a record
  --> Failed as expected 

**** Lengthening a record
  --> Failed as expected 

  - Try to insert a record that's too long

**** Inserting a too-long record
  --> Failed as expected 

  Test 4 completed successfully.


...Heap File tests completely successfully.

/usr/lib/jvm/java-7-openjdk-amd64/bin/javac -classpath .:.. TestDriver.java BTTest.java
/usr/lib/jvm/java-7-openjdk-amd64/bin/java  -classpath .:.. tests.BTTest
Replacer: Clock


Running  tests....

 ***************** The file name is: AAA0  **********
-------------------------- MENU ------------------


[0]   Naive delete (new file)
[1]   Full delete(Default) (new file)

[2]   Print the B+ Tree Structure
[3]   Print All Leaf Pages
[4]   Choose a Page to Print

           ---Integer 